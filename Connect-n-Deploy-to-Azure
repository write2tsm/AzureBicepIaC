// Install the VS Code
// Install Git client
// Install Azure client
// Install Bicep https://github.com/Azure/bicep/releases/latest/download/bicep-setup-win-x64.exe
// Recommend installing it manually using the installer from above link, as it sets the PATH variable 

// Install important VS Code extensions: Bicep, Azure CLI, Azure Tools Extension PAck
// Restart the VS Code (if it was running when you installed Azure CLI and Azure CLI extension for VS Code)

// Run the following command  to login / connect to Azure from within VS Code.
    az login

// If you have access to more than one Azure Subsciption (single identity is linked to multiple subscription), validate that you're connected to the right Azure subscription before you deploy any code. Look for the “isDefault” attribute in the list of subscriptions listed - the one that has this attribute set to "true" is whwere all your code in VS Code will be targeted to.

// You can also run the following command to list the subscriptions down
    az account show
Change to your subscription using the following command:
    az account set --subscription name / ID

Once changed, verify the subscriptions again using the following command that produuces reuslt as a table (easy to read):
    az account list --output table

As a good practice, we would like to name the Azure Deployment with something unique and intuitive:
    $date = Get-Date -Format "MM-dd-yyyy"
    $rand = Get-Random -Maximum 1000
    $deploymentName = "AzSentinelDeployment-"+"$date"+"-"+"$rand"

New-AzResourceGroupDeployment -Name $deploymentName -ResourceGroupName SentinelIaCTest -TemplateFile .\AzureSentinelMain.bicep -TemplateParameterFile .\AzureSentinelMain.parameters.json -c
